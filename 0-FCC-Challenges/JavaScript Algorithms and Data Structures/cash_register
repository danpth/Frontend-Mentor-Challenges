function valueOf(currency){
  let currencies = {
    "PENNY": 0.01,
    "NICKEL": 0.05,
    "DIME": 0.10,
    "QUARTER": 0.25,
    "ONE": 1,
    "FIVE": 5,
    "TEN": 10,
    "TWENTY": 20,
    "ONE HUNDRED": 100
  }
  return currencies[currency];
}

function cidTotal(cid){ //counts total money in cash register
let sum = 0;
  for(let i = 0; i < cid.length; i ++){
    sum += cid[i][1];
  }
  sum = sum.toFixed(2)
  return sum;
}

function enoughChange(change, totalCid){ //checks if there's enough for change
  if(totalCid > change){
    return 0;
  }
  if(totalCid == change){
    return 1;
  }
  if(totalCid < change){
    return 2;
  }
}

function cleanChange(change){ //removes currency with 0
  let cleanedChange = [];
  cleanedChange = change.filter(x => x[1]>0);
  cleanedChange.reverse();
  return cleanedChange;
}

function getChange(dueChange, cid){ //Calculate change
  let change = [["PENNY", 0], ["NICKEL", 0], ["DIME", 0], ["QUARTER", 0], ["ONE", 0], ["FIVE", 0], ["TEN", 0], ["TWENTY", 0], ["ONE HUNDRED", 0]];
  for(let i = cid.length - 1; i >= 0; i--){
    while(dueChange >= valueOf(cid[i][0]) && cid[i][1]>0){
      change[i][1] += valueOf(cid[i][0]);
      cid[i][1] -= valueOf(cid[i][0]);
      dueChange -= valueOf(cid[i][0]);
      dueChange = dueChange.toFixed(2);
    }
  }
  let cleanedChange = cleanChange(change);
  return cleanedChange;
}

function totalOf(calculatedChange){
  let total = 0;
  for(let i = 0; i < calculatedChange.length; i++){
    total += calculatedChange[i][1];
  }
  return total.toFixed(2);
}

function checkCashRegister(price, cash, cid) {
  let change;
  let totalCid = cidTotal(cid);
  let changeStatus = enoughChange(cash-price, totalCid);
  if(changeStatus == 0){
    change = {
      status: "OPEN",
      change: getChange(cash-price, cid)
    }

    if(totalOf(change['change']) != cash - price){
      change['status'] = "INSUFFICIENT_FUNDS";
      change['change'] = [];
    }
    console.log(change)

  }else if(changeStatus == 1){
    change = {
      status: "CLOSED",
      change: cid
    };
  }else{
    change = {
      status: "INSUFFICIENT_FUNDS",
      change: []
    };
  }

  return change;
}



checkCashRegister(19.5, 20, [["PENNY", 0.01], ["NICKEL", 0], ["DIME", 0], ["QUARTER", 0], ["ONE", 1], ["FIVE", 0], ["TEN", 0], ["TWENTY", 0], ["ONE HUNDRED", 0]]);